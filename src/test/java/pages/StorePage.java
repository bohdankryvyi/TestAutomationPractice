package pages;

import driver.DriverSingleton;
import io.qameta.allure.Step;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import util.ForTheTextSearching;
import util.GenerateRandomMail;

import java.util.ArrayList;
import java.util.List;

public class StorePage extends BaseAbstractPage {
    private  static final String MYPAGE_URL = "http://automationpractice.com/index.php";
    private Logger log = LogManager.getRootLogger();
    /**
     * constructor for  fields initialization
     */
    public StorePage(){
        super(DriverSingleton.getDriver());
        PageFactory.initElements(driver, this);
    }

    @FindBy(xpath ="//div[@class=\"product-container\"]//a[@class=\"product-name\"]")
    private List<WebElement> openedItemList; // return list of opened elements
    //private WebElement firstItem = openedItemList.get(0); // get first element from the list

    @FindBy(xpath = "//h1[@itemprop='name']")
    private WebElement firstItemName;
    @FindBy(xpath = "//*[@id=\"newsletter-input\"]")
    private WebElement subscribeMailField;

    @FindBy(xpath = "//*[@id=\"columns\"]/p")
    private WebElement messageAfterSubscribing;

    @FindBy(xpath = "//*[@class='login']")
    private WebElement signInButton;

    @FindBy(xpath = "//*[@id=\"search_query_top\"]")
    private WebElement searchField;

    @FindBy(xpath = "//ul[@class=\"product_list grid row\"]//a[@class=\"product-name\"]")
    //Get List with all founded web-elements
    private List<WebElement> searchResults;

    @FindBy(css = "a[title='View my customer account'] span")
    private WebElement accountName;

    public StorePage openPage(){
        driver.get(MYPAGE_URL);
        return this;
    }

    @Step("Open first item from the products list")
    public ProductPage openFirstItem(){
        WebElement firstItem = openedItemList.get(0);
        firstItem.click();
        log.info("First item is opened");
        return new ProductPage();
    }

    @Step("Subscribe on newsletters with new valid mail")
    public String subscribeSucessfully(){
        //Send email generated by my own mail generator class
        subscribeMailField.sendKeys(GenerateRandomMail.getSaltString(), Keys.ENTER);
        log.info("User subscribed on newsletter with new valid mail");
        return messageAfterSubscribing.getText();
    }

    @Step("Try to subscribe on newsletters with new valid mail")
    public String subscribeWithInvalidData(){
        subscribeMailField.sendKeys("test", Keys.ENTER);
        log.info("User is NOT subscribed on newsletter with invalid or already existed mail");
        return messageAfterSubscribing.getText();
    }

    @Step("Open sign In page via clicking the SignIn button")
    public SignInPage openSignInPage(){
        signInButton.click();
        //return Sing in page on clicking the SignIn button
        log.info("Sign in page is opened after clicking on the Sign In button");
        return new SignInPage();
    }

    @Step("Search products via provided word ")
    public  boolean searchItem(String data){
        //use config with a word that we want to search by
        searchField.sendKeys(data, Keys.ENTER);
        List<String> blouseResultsForGettingTitle = new ArrayList();

        //Create list with titles
        for (WebElement element : searchResults) {
            blouseResultsForGettingTitle.add(element.getAttribute("Title"));
        }
        //Stream version
        //blouseResultsForGettingTitle= searchResults.stream().map(webElement -> webElement.getAttribute("Title")).collect(Collectors.toList());
        log.info("Products are find based on keyword: "+ data);
        return ForTheTextSearching.StreamForTheText(blouseResultsForGettingTitle, data);
    }
    @Step("Get logged account name")
    public String getAccountName(){
        log.info("logged account name is " + accountName.getText());
        return accountName.getText();
    }
}
